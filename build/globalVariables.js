"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DASHBOARD_TO_ELEMENT_RELATION = exports.ENDPOINT_RELATION_NAME = exports.GEOGRAPHIC_TYPES = exports.RELATION_NAME = exports.DASHBOARD_CONTEXT_TYPE = exports.DASHBOARD_CONTEXT = undefined;

var _spinalEnvViewerContextGeographicService = require("spinal-env-viewer-context-geographic-service");

var _spinalEnvViewerContextGeographicService2 = _interopRequireDefault(_spinalEnvViewerContextGeographicService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DASHBOARD_CONTEXT = "Dashboard Standard";
const DASHBOARD_CONTEXT_TYPE = "dashboardContext";
const RELATION_NAME = "hasDashBoard";
const ENDPOINT_RELATION_NAME = "hasEndpoint";
const DASHBOARD_TO_ELEMENT_RELATION = "connected";

// Affiché par ordre (à ne pas Modifier, ou ajouter l'element à la fin)
const GEOGRAPHIC_TYPES = [{
  name: "Site",
  type: _spinalEnvViewerContextGeographicService2.default.constants.SITE_TYPE
}, {
  name: "Building",
  type: _spinalEnvViewerContextGeographicService2.default.constants.BUILDING_TYPE
}, {
  name: "Floor",
  type: _spinalEnvViewerContextGeographicService2.default.constants.FLOOR_TYPE
}, {
  name: "Zone",
  type: _spinalEnvViewerContextGeographicService2.default.constants.ZONE_TYPE
}, {
  name: "Room",
  type: _spinalEnvViewerContextGeographicService2.default.constants.ROOM_TYPE
}, {
  name: "Equipment",
  type: _spinalEnvViewerContextGeographicService2.default.constants.EQUIPMENT_TYPE
}];

exports.DASHBOARD_CONTEXT = DASHBOARD_CONTEXT;
exports.DASHBOARD_CONTEXT_TYPE = DASHBOARD_CONTEXT_TYPE;
exports.RELATION_NAME = RELATION_NAME;
exports.GEOGRAPHIC_TYPES = GEOGRAPHIC_TYPES;
exports.ENDPOINT_RELATION_NAME = ENDPOINT_RELATION_NAME;
exports.DASHBOARD_TO_ELEMENT_RELATION = DASHBOARD_TO_ELEMENT_RELATION;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxWYXJpYWJsZXMuanMiXSwibmFtZXMiOlsiREFTSEJPQVJEX0NPTlRFWFQiLCJEQVNIQk9BUkRfQ09OVEVYVF9UWVBFIiwiUkVMQVRJT05fTkFNRSIsIkVORFBPSU5UX1JFTEFUSU9OX05BTUUiLCJEQVNIQk9BUkRfVE9fRUxFTUVOVF9SRUxBVElPTiIsIkdFT0dSQVBISUNfVFlQRVMiLCJuYW1lIiwidHlwZSIsIkNvbnRleHRHZW9ncmFwaGljU2VydmljZSIsImNvbnN0YW50cyIsIlNJVEVfVFlQRSIsIkJVSUxESU5HX1RZUEUiLCJGTE9PUl9UWVBFIiwiWk9ORV9UWVBFIiwiUk9PTV9UWVBFIiwiRVFVSVBNRU5UX1RZUEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBR0EsTUFBTUEsb0JBQW9CLG9CQUExQjtBQUNBLE1BQU1DLHlCQUF5QixrQkFBL0I7QUFDQSxNQUFNQyxnQkFBZ0IsY0FBdEI7QUFDQSxNQUFNQyx5QkFBeUIsYUFBL0I7QUFDQSxNQUFNQyxnQ0FBZ0MsV0FBdEM7O0FBSUE7QUFDQSxNQUFNQyxtQkFBbUIsQ0FBQztBQUN0QkMsUUFBTSxNQURnQjtBQUV0QkMsUUFBTUMsa0RBQXlCQyxTQUF6QixDQUFtQ0M7QUFGbkIsQ0FBRCxFQUl2QjtBQUNFSixRQUFNLFVBRFI7QUFFRUMsUUFBTUMsa0RBQXlCQyxTQUF6QixDQUFtQ0U7QUFGM0MsQ0FKdUIsRUFRdkI7QUFDRUwsUUFBTSxPQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNHO0FBRjNDLENBUnVCLEVBWXZCO0FBQ0VOLFFBQU0sTUFEUjtBQUVFQyxRQUFNQyxrREFBeUJDLFNBQXpCLENBQW1DSTtBQUYzQyxDQVp1QixFQWdCdkI7QUFDRVAsUUFBTSxNQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNLO0FBRjNDLENBaEJ1QixFQW9CdkI7QUFDRVIsUUFBTSxXQURSO0FBRUVDLFFBQU1DLGtEQUF5QkMsU0FBekIsQ0FBbUNNO0FBRjNDLENBcEJ1QixDQUF6Qjs7UUE2QkVmLGlCLEdBQUFBLGlCO1FBQ0FDLHNCLEdBQUFBLHNCO1FBQ0FDLGEsR0FBQUEsYTtRQUNBRyxnQixHQUFBQSxnQjtRQUNBRixzQixHQUFBQSxzQjtRQUNBQyw2QixHQUFBQSw2QiIsImZpbGUiOiJnbG9iYWxWYXJpYWJsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGV4dEdlb2dyYXBoaWNTZXJ2aWNlIGZyb20gXCJzcGluYWwtZW52LXZpZXdlci1jb250ZXh0LWdlb2dyYXBoaWMtc2VydmljZVwiO1xuXG5cbmNvbnN0IERBU0hCT0FSRF9DT05URVhUID0gXCJEYXNoYm9hcmQgU3RhbmRhcmRcIjtcbmNvbnN0IERBU0hCT0FSRF9DT05URVhUX1RZUEUgPSBcImRhc2hib2FyZENvbnRleHRcIjtcbmNvbnN0IFJFTEFUSU9OX05BTUUgPSBcImhhc0Rhc2hCb2FyZFwiO1xuY29uc3QgRU5EUE9JTlRfUkVMQVRJT05fTkFNRSA9IFwiaGFzRW5kcG9pbnRcIjtcbmNvbnN0IERBU0hCT0FSRF9UT19FTEVNRU5UX1JFTEFUSU9OID0gXCJjb25uZWN0ZWRcIjtcblxuXG5cbi8vIEFmZmljaMOpIHBhciBvcmRyZSAow6AgbmUgcGFzIE1vZGlmaWVyLCBvdSBham91dGVyIGwnZWxlbWVudCDDoCBsYSBmaW4pXG5jb25zdCBHRU9HUkFQSElDX1RZUEVTID0gW3tcbiAgICBuYW1lOiBcIlNpdGVcIixcbiAgICB0eXBlOiBDb250ZXh0R2VvZ3JhcGhpY1NlcnZpY2UuY29uc3RhbnRzLlNJVEVfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJCdWlsZGluZ1wiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuQlVJTERJTkdfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJGbG9vclwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuRkxPT1JfVFlQRVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJab25lXCIsXG4gICAgdHlwZTogQ29udGV4dEdlb2dyYXBoaWNTZXJ2aWNlLmNvbnN0YW50cy5aT05FX1RZUEVcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiUm9vbVwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuUk9PTV9UWVBFXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkVxdWlwbWVudFwiLFxuICAgIHR5cGU6IENvbnRleHRHZW9ncmFwaGljU2VydmljZS5jb25zdGFudHMuRVFVSVBNRU5UX1RZUEVcbiAgfVxuXG5dXG5cblxuZXhwb3J0IHtcbiAgREFTSEJPQVJEX0NPTlRFWFQsXG4gIERBU0hCT0FSRF9DT05URVhUX1RZUEUsXG4gIFJFTEFUSU9OX05BTUUsXG4gIEdFT0dSQVBISUNfVFlQRVMsXG4gIEVORFBPSU5UX1JFTEFUSU9OX05BTUUsXG4gIERBU0hCT0FSRF9UT19FTEVNRU5UX1JFTEFUSU9OXG59Il19